NandFlash操作：
地指线、数据线、指令线复用。

ALE	:地址使能
CLE	:命令（指令使能）
nFCE:CS使能
nFRE:Read使能
nFWE:Write使能

-----------------------------------------------------------------------------------------------------------------------
				NandFlash角度操作Nand FLash									| S3C2440 Nand Flash控制器角度操作NandFlash
-----------------------------------------------------------------------------------------------------------------------
发指令	| nFEC=1 && CLE=1 && ALE=0 && nFWE=1 && DATA0~DATA7=xxx				| NFCONT.1 = 0 && NFCMD = command
		|(即片选信号、指令信号、写信号三者使能，然后往数据线写指令数据)		| 
-----------------------------------------------------------------------------------------------------------------------
发地址	| nFEC=1 && CLE=0 && ALE=1 && nFWE=1 && DATA0~DATA7=xxx				| NFCONT.1 = 0 && NFADDR = address
		|(即片选信号、地址信号、写信号三者使能，然后往数据线写地址数据)		|
-----------------------------------------------------------------------------------------------------------------------
发数据	| nFEC=1 && CLE=0 && ALE=0 && nFWE=1 && DATA0~DATA7=xxx 			| NFCONT.1 = 0 && NFDATA = value
		|(即片选信号、写信号二者使能，然后往数据线写数据)					|
-----------------------------------------------------------------------------------------------------------------------
读数据	| nFEC=1 && nFFRE=1 && read DATA0~DATA7								| NFCONT.1 = 0 && value = NFDATA
		|(即片选信号、读信号二者使能，然后读DATA0~DATA7数据线)				|
-----------------------------------------------------------------------------------------------------------------------
本来直接进行发指令、发地址、发数据、读数据的操作比较繁琐，但是由于Nand Flash的操作指令不同芯片都是一致的，
因此在SOC芯片里搞了个NandFlash控制器，可以用寄存器来控制，以更加简单的方式进行操作。

S3C2440 寄存器地址(都是四字节长度的寄存器)：
NFCONT:[0x4E000004]	
NFCMD:[0x4E000008]	
NFADDR:[0x4E00000C]	
NFDATA:[0x4E000010]	
操作完成后 NFCONT = 0xFF即可退出当前操作模式（状态）


根据以上寄存器用uboot进行测试:
1、读取ID信息

md.l 4E000004 1
4e000004: 00000003    ....
mw.l 4E000004 0x01							<----bit1=0，片选Nand Flash
mw.b 4E000008 0x90							<----cmd 0x90即读ID
mw.b 4E00000C 0x0							<----读0地址
md.l 4E000010 4								<----读4个字节
mw.b 4E000008 0xff							<----退出读ID状态

OpenJTAG> mw.l 4E000004 0x01
OpenJTAG> mw.b 4E000008 0x90
OpenJTAG> mw.b 4E00000C 0x0
OpenJTAG> md.l 4E000010 1    
4e000010: 9510daec    ....					<----Byte1 = 0xDA指示了Device Code，即芯片为K9F2G08U0C
OpenJTAG> mw.b 4E000008 0xff
OpenJTAG> 

2、读Nand数据

md.l 4E000004 1
4e000004: 00000003    ....
mw.l 4E000004 0x01							<----bit1=0，片选Nand Flash
mw.b 4E000008 0x0							<----发出读命令	

/* 地址5Bytes，3Bytes列地址（2^12 = 2048 Bytes/Page），2byte行地址(2^8 = 256Pages)，现在读取0地址，5Byte全0 */
mw.b 4E00000C 0x0							<----Col addr byte 0
mw.b 4E00000C 0x0							<----Col addr byte 1
mw.b 4E00000C 0x0							<----Col addr byte 2
mw.b 4E00000C 0x0							<----Row addr byte 0
mw.b 4E00000C 0x0							<----Row addr byte 1

mw.b 4E000008 0x30							<----cmd 0x30，表示确认读取的地址
md.l 4E000010 1								<----读4个字节
mw.b 4E000008 0xff							<----退出读内容状态

OpenJTAG> nand dump 0
Page 00000000 dump:
        17 00 00 ea 14 f0 9f e5  14 f0 9f e5 14 f0 9f e5
        14 f0 9f e5 14 f0 9f e5  14 f0 9f e5 14 f0 9f e5
        00 02 f8 33 60 02 f8 33  c0 02 f8 33 20 03 f8 33
        80 03 f8 33 a0 04 f8 33  c0 04 f8 33 ef be ad de
OpenJTAG> mw.l 4E000004 0x01
OpenJTAG> mw.b 4E000008 0x0
OpenJTAG> mw.b 4E00000C 0x0
OpenJTAG> mw.b 4E00000C 0x0
OpenJTAG> mw.b 4E00000C 0x0
OpenJTAG> mw.b 4E00000C 0x0
OpenJTAG> mw.b 4E00000C 0x0
OpenJTAG> mw.b 4E000008 0x30    
OpenJTAG> md.l 4E000010 4               
4e000010: ea000017 e59ff014 e59ff014 e59ff014    ................		<---和dump命令读出来的一样
OpenJTAG> 